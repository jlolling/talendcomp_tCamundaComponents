<%@ jet 
	imports="
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.process.IConnection
		org.talend.core.model.utils.NodeUtil
		java.util.List
		java.util.Map
		java.util.ArrayList
	"
%>
<%
	 CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode) codeGenArgument.getArgument();
    String cid = node.getUniqueName();
	 boolean debug = "true".equals(ElementParameterParser.getValue(node, "__DEBUG__"));
	 IConnection conn = null;
	 List<? extends IConnection> outConns = NodeUtil.getIncomingConnections(node, IConnectionCategory.DATA);
	 if (outConns.size() > 0) {
		  conn = outConns.get(0);
	 }
	 List<IMetadataColumn> listColumns = new ArrayList<IMetadataColumn>(); // dummy
	 List<IMetadataTable> metadatas = node.getMetadataList();
	 if (metadatas != null && metadatas.size() > 0) {
    	  IMetadataTable metadata = metadatas.get(0);
    	  if (metadata != null) {
    		   listColumns = metadata.getListColumns();
		  }
	 }
	 List<Map<String, String>> variables = (List<Map<String,String>>) ElementParameterParser.getObjectValue(node, "__VARIABLES__");
	 boolean valuesFromFlow = "true".equals(ElementParameterParser.getValue(node, "__TAKE_VALUE_FROM_FLOW__"));
	 boolean checkLockExpirationTime = "true".equals(ElementParameterParser.getValue(node, "__CHECK_LOCK_EXPIRATION__"));
	 boolean suppressExpiredTasks = "true".equals(ElementParameterParser.getValue(node, "__SUPPRESS_EXPIRED_TASK__"));
    String fetchAndLock = ElementParameterParser.getValue(node, "__FETCH_AND_LOCK_COMPONENT__");
%>
	de.jlo.talendcomp.camunda.externaltask.Response <%=cid%> = (de.jlo.talendcomp.camunda.externaltask.Response) globalMap.get("<%=cid%>");
	if (<%=cid%> == null) {
		<%=cid%> = new de.jlo.talendcomp.camunda.externaltask.Response((de.jlo.talendcomp.camunda.externaltask.FetchAndLock) globalMap.get("<%=fetchAndLock%>"));
		<%=cid%>.initLogger("<%=cid%>");
		<%=cid%>.setDebug(<%=debug%>);
		<%=cid%>.setCheckLockExpiration(<%=checkLockExpirationTime%>);
		<%=cid%>.setSuppressExpiredTasks(<%=suppressExpiredTasks%>);
		globalMap.put("<%=cid%>", <%=cid%>);
	}
	try {
<%	for (int i = 0; i < variables.size(); i++) {
		Map<String, String> variable = variables.get(i);
		boolean use = "true".equals(variable.get("USE"));
		if (use == false) {
			continue;
		}
		String fieldLabel = variable.get("ATTRIBUTE_ALIAS");
		IMetadataColumn mc = listColumns.get(i);
		if (fieldLabel == null || fieldLabel.trim().isEmpty()) {
			fieldLabel = "\"" + mc.getLabel()  + "\"";
		}
		String paramType = variable.get("PARAM_TYPE");
		if (paramType == null || paramType.trim().isEmpty()) {
			 paramType = "null";
		}
		String objectTypeName = variable.get("OBJECT_TYPE_NAME");
		if (objectTypeName == null || objectTypeName.trim().isEmpty()) {
			 objectTypeName = "null";
		}
		String pattern = mc.getPattern();
		if (pattern == null || pattern.trim().isEmpty()) {
			pattern = "null";
		} %>
<% 	if (conn != null && valuesFromFlow) { %>
		<%=cid%>.addVariable(<%=fieldLabel%>, <%=conn.getName()%>.<%=mc.getLabel()%>, <%=pattern%>, <%=objectTypeName%>, "<%=paramType%>");
<%		} else {
			String value = variable.get("VALUE");
			if (value != null && value.trim().isEmpty() == false) { %>
		<%=cid%>.addVariable(<%=fieldLabel%>, <%=value%>, <%=pattern%>, <%=objectTypeName%>, "<%=paramType%>");
<%			} %>
<%		} %>
<%	} %>
<%
	boolean useTaskIdFromInput = "true".equals(ElementParameterParser.getValue(node, "__TAKE_TASK_ID_FROM_DATA__"));
	if (useTaskIdFromInput) {
		String taskIdFromInput = ElementParameterParser.getValue(node, "__TASK_ID__");  
		String taskExpTimeFromInput = ElementParameterParser.getValue(node, "__TASK_EXPIRATION_TIME__"); %>
		<%=cid%>.setTaskIdFromInput(<%=taskIdFromInput%>);
<%		if (checkLockExpirationTime) { %>
		<%=cid%>.setTaskExpirationTime(<%=taskExpTimeFromInput%>);
<%		} %>
<%	} %>
		<%=cid%>.complete();
		globalMap.put("<%=cid%>_CURRENT_TASK_IS_EXPIRED", <%=cid%>.isCurrentTaskExpired());
		Integer count_<%=cid%> = (Integer) globalMap.get("<%=cid%>_NB_LINE");
		if (count_<%=cid%> == null) {
			count_<%=cid%> = 0;
		}
		count_<%=cid%> = count_<%=cid%> + 1;
		globalMap.put("<%=cid%>_NB_LINE", count_<%=cid%>);	
	} catch (Exception ex) {
		globalMap.put("<%=cid%>_CURRENT_TASK_IS_EXPIRED", <%=cid%>.isCurrentTaskExpired());
		globalMap.put("<%=cid%>_ERROR_MESSAGE", ex.getMessage());
		throw ex;
	}